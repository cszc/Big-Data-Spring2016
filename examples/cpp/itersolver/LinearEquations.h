/*
 * CMSC 12300 - Computer Science with Applications 3
 * Borja Sotomayor, 2013
 *
 * Class to represent a system of linear equations.
 *
 */

#ifndef LINEAREQUATIONS_H_
#define LINEAREQUATIONS_H_

#include<iostream>

class LinearEquations {

public:
	// This class has four const attributes.
	// The reason we make them public is because A and b
	// have to be accessed continuously, and using getter
	// methods would add some overhead.
	// However, since they're const attributes, a user
	// of this object won't be able to modify them once
	// the object is constructed.
	const double* const *A;
	const double *b;
	const int numEq;
	const int numVar;

	// We use the Named Constructor pattern to construct
	// LinearEquations object. So, there are no public
	// constructors (other than the copy constructor).
	// There is only a private constructor that is called
	// by the fromText static method.
	// The fromText method takes in an istream that must
	// contain a text representation of the system of
	// linear equations, as generated by gen_lineq.py
	static LinearEquations fromText(std::istream &is);

	// Copy constructor
	LinearEquations(const LinearEquations &leq);

	// Destructor
	~LinearEquations();

	// Applies values of x to the system of linear equations,
	// and returns an array of doubles with the values of b.
	double* apply(double x[]) const;

	// Friend function to stream out a string representation
	// of the system of linear equations
	friend std::ostream& operator<<(std::ostream &os, const LinearEquations &leq);

private:
	// Private constructor. Only called by fromText.
	LinearEquations(double **A, double *b, int numEq, int numVar);
};

#endif /* LINEAREQUATIONS_H_ */
